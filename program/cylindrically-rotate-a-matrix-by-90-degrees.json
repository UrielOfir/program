{"slug":"cylindrically-rotate-a-matrix-by-90-degrees","title":"Cylindrically rotate a matrix by 90 degrees","trackId":5444,"tags":["JavaScript","TypeScript","Python"],"contributors":["harshraj8843","anandfresh","SarahTek"],"contentHtml":"<h2>Write a program to cylindrically rotate a matrix by 90 degrees</h2>\n<pre><code>Input  :\n1 2 3\n4 5 6\n7 8 9\n\nOutput :\n7 4 1\n8 5 2\n9 6 3\n</code></pre>\n<hr>\n<pre><code>\"use strict\";\n\nlet N = 3;\n\nfunction rotate90Clockwise(arr) {\n  for (let j = 0; j &#x3C; N; j++) {\n    for (let i = N - 1; i >= 0; i--) {\n      process.stdout.write(arr[i][j] + \" \");\n    }\n    console.log();\n  }\n}\n\nlet arr = [\n  [1, 1, 1],\n  [2, 2, 2],\n  [3, 3, 3],\n];\n\nconsole.log(\"Initial matrix:\");\nfor (let i = 0; i &#x3C; N; i++) {\n  for (let j = 0; j &#x3C; N; j++) {\n    process.stdout.write(arr[i][j] + \" \");\n  }\n  console.log();\n}\n\nconsole.log(\"\\nRotated matrix:\");\nrotate90Clockwise(arr);\n</code></pre>\n<pre><code>const rotateClockwise = (matrix: number[][]): number[][] => {\n\n    let n = matrix.length;\n    for (let i = 0; i &#x3C; n / 2; i++) {\n        for (let j = i; j &#x3C; n - i - 1; j++) {\n            let tmp = matrix[i][j];\n            matrix[i][j] = matrix[n - j - 1][i];\n            matrix[n - j - 1][i] = matrix[n - i - 1][n - j - 1];\n            matrix[n - i - 1][n - j - 1] = matrix[j][n - i - 1];\n            matrix[j][n - i - 1] = tmp;\n        }\n    }\n    return matrix;\n};\n\nconsole.log(rotateClockwise([[1, 2, 3], [4, 5, 6], [7, 8, 9]]));\n</code></pre>\n<pre><code>N = 3;\n  \ndef rotate90Degrees(arr) :\n    global N;\n      \n    for j in range(N) :\n        for i in range(N - 1, -1, -1) :\n            print(arr[i][j], end = \" \")\n        print()\n          \narr = [ [ 1, 2, 3],\n        [ 4, 5, 6],\n        [ 7, 8, 9] ]\n\nrotate90Degrees(arr);\n</code></pre>\n","markdown":"\n## Write a program to cylindrically rotate a matrix by 90 degrees\n\n```\nInput  :\n1 2 3\n4 5 6\n7 8 9\n\nOutput :\n7 4 1\n8 5 2\n9 6 3\n```\n\n---\n\n<CodeBlock slug=\"cylindrically-rotate-a-matrix-by-90-degrees\" >\n\n```js\n\"use strict\";\n\nlet N = 3;\n\nfunction rotate90Clockwise(arr) {\n  for (let j = 0; j < N; j++) {\n    for (let i = N - 1; i >= 0; i--) {\n      process.stdout.write(arr[i][j] + \" \");\n    }\n    console.log();\n  }\n}\n\nlet arr = [\n  [1, 1, 1],\n  [2, 2, 2],\n  [3, 3, 3],\n];\n\nconsole.log(\"Initial matrix:\");\nfor (let i = 0; i < N; i++) {\n  for (let j = 0; j < N; j++) {\n    process.stdout.write(arr[i][j] + \" \");\n  }\n  console.log();\n}\n\nconsole.log(\"\\nRotated matrix:\");\nrotate90Clockwise(arr);\n```\n\n```ts\nconst rotateClockwise = (matrix: number[][]): number[][] => {\n\n    let n = matrix.length;\n    for (let i = 0; i < n / 2; i++) {\n        for (let j = i; j < n - i - 1; j++) {\n            let tmp = matrix[i][j];\n            matrix[i][j] = matrix[n - j - 1][i];\n            matrix[n - j - 1][i] = matrix[n - i - 1][n - j - 1];\n            matrix[n - i - 1][n - j - 1] = matrix[j][n - i - 1];\n            matrix[j][n - i - 1] = tmp;\n        }\n    }\n    return matrix;\n};\n\nconsole.log(rotateClockwise([[1, 2, 3], [4, 5, 6], [7, 8, 9]]));\n```\n\n```py\nN = 3;\n  \ndef rotate90Degrees(arr) :\n    global N;\n      \n    for j in range(N) :\n        for i in range(N - 1, -1, -1) :\n            print(arr[i][j], end = \" \")\n        print()\n          \narr = [ [ 1, 2, 3],\n        [ 4, 5, 6],\n        [ 7, 8, 9] ]\n\nrotate90Degrees(arr);\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-25T13:17:11Z"}